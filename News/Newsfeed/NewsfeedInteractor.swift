//
//  NewsfeedInteractor.swift
//  News
//
//  Created by Macbook on 9/6/19.
//  Copyright (c) 2019 iMac GWS. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsfeedBusinessLogic
{
    func makeRequest(request: Newsfeed.Model.Request.RequestType)
}

protocol NewsfeedDataStore
{
    //var name: String { get set }
}

class NewsfeedInteractor: NewsfeedBusinessLogic, NewsfeedDataStore
{
    var presenter: NewsfeedPresentationLogic?
    var worker: NewsfeedWorker?
    
    
    private var fetcher: DataFetcher = NetworkDataFetcher(networking: NetworkService())
    private var revealedPostIds = [Int]()
    private var feedResponse: FeedResponse?
    // MARK: Do something
    
    func makeRequest(request: Newsfeed.Model.Request.RequestType)
    {
        worker = NewsfeedWorker()
        worker?.doSomeWork()

        switch request {
        case .getNewsfeed:
            fetcher.getFeed { [weak self] (feedResponse) in
                
                self?.feedResponse = feedResponse
                self?.presentFeed()
            }
        case .revealPostIds(let postId):
            revealedPostIds.append(postId)
            
            presentFeed()
        }
    }
    
    private func presentFeed() {
        guard let feedResponse = feedResponse else { return }
        presenter?.presentData(response: Newsfeed.Model.Response.ResponseType.presentNewsFeed(feed: feedResponse, revealedPostIds: revealedPostIds))
    }
}
